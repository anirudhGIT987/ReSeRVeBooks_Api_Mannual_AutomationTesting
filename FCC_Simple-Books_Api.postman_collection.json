{
	"info": {
		"_postman_id": "1e018715-c594-40b5-a0eb-6d7c0b4382c8",
		"name": "FCC_Simple-Books_Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32621142"
	},
	"item": [
		{
			"name": "Get_Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"TC_Status- Status code is 200\",() =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{booksurl}}/status2",
					"host": [
						"{{booksurl}}"
					],
					"path": [
						"status2"
					],
					"query": [
						{
							"key": "available",
							"value": "true",
							"disabled": true
						},
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "id",
							"value": "2",
							"disabled": true
						},
						{
							"key": "current-stock",
							"value": "0",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Listing_AllBooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"TC_Status- Status code is 200\",() =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const resp=pm.response.json();\r",
							"const bookType=resp.filter((book) => book.available ===true);\r",
							"\r",
							"const book=bookType[0];\r",
							"if(book){\r",
							"    pm.globals.set(\"book_id\", bookType[0].id);\r",
							"}\r",
							"//const bookType = resp.filter((book) => book.available === false);\r",
							"\r",
							"pm.test(\"Kaalpanetara\", () =>{\r",
							"   // pm.expect(book).to.be.an('object');\r",
							"    pm.expect(book.available).to.be.true;\r",
							"    pm.expect(book.type).to.eql(\"non-fiction\");\r",
							"\r",
							"\r",
							"});\r",
							"console.log(bookType);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{booksurl}}/books",
					"host": [
						"{{booksurl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "available",
							"value": "true",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "5",
							"disabled": true
						},
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "id",
							"value": "2",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						},
						{
							"key": "current-stock",
							"value": "0",
							"disabled": true
						},
						{
							"key": "available",
							"value": "false",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single-Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"TC_Status- Status code is 200\",() =>{\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							" \r",
							" const resp=pm.response.json();\r",
							"\r",
							"    \r",
							" pm.test(\"Price is above 12\",() =>{\r",
							"   pm.expect(resp.price).to.be.above(12);\r",
							" });\r",
							"\r",
							" pm.test(\"In-Stock\",function(){\r",
							"    pm.expect(resp[\"current-stock\"]).to.be.above(0);\r",
							" });\r",
							"console.log(resp);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{booksurl}}/books/:bookId",
					"host": [
						"{{booksurl}}"
					],
					"path": [
						"books",
						":bookId"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Registering_Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\",() =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"clientName\":\"tapaala\",\r\n    \"clientEmail\":\"tapaala@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{booksurl}}/api-clients",
					"host": [
						"{{booksurl}}"
					],
					"path": [
						"api-clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Ordering_Books",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accesToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"bookId\":3,//2 is Unavailable\r\n    \"customerName\":\"{{$randomLastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{booksurl}}/orders",
					"host": [
						"{{booksurl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_All_Orders",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accesToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"bookId\":3,//2 is Unavailable\r\n    \"customerName\":\"{{$randomLastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{booksurl}}/orders",
					"host": [
						"{{booksurl}}"
					],
					"path": [
						"orders"
					],
					"query": [
						{
							"key": "bookId",
							"value": "3",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_single_Order",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accesToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"bookId\":3,//2 is Unavailable\r\n    \"customerName\":\"{{$randomLastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{booksurl}}/orders/:orderId",
					"host": [
						"{{booksurl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "HNzbmPeuvGIq9N5K1dDt_"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update_Order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accesToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"customerName\":\"Veerayya Subbayya\",\r\n  \"quantity\":2\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{booksurl}}/orders/:orderId",
					"host": [
						"{{booksurl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "huPdgj6oMeu_YPgMueKjg"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete_Order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accesToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"bookId\":3,//2 is Unavailable\r\n    \"customerName\":\"{{$randomLastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{booksurl}}/orders/:orderId",
					"host": [
						"{{booksurl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "HNzbmPeuvGIq9N5K1dDt_"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "booksurl",
			"value": "https://simple-books-api.glitch.me"
		},
		{
			"key": "accesToken",
			"value": "---",
			"type": "string"
		},
		{
			"key": "Orderid",
			"value": "",
			"type": "string"
		}
	]
}